{"remainingRequest":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js??ref--4-3!/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/pluscape/pluscape.tsx","dependencies":[{"path":"/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/pluscape/pluscape.tsx","mtime":1560826659243},{"path":"/home/guilherme/workspace/jhipster/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import './pluscape.scss';\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { connect } from 'react-redux';\nimport { Container, Col, Row } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, getSortState } from 'react-jhipster';\nimport { getEntities, reset } from 'app/entities/product/product.reducer';\nexport class Pluscape extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = Object.assign({}, getSortState(this.props.location, 3), { sort: 'currentPrice', order: 'desc' });\n        this.reset = () => {\n            this.props.reset();\n            this.setState({ activePage: 1 }, () => {\n                this.getEntities();\n            });\n        };\n        this.handleLoadMore = () => {\n            if (window.pageYOffset > 0) {\n                this.setState({ activePage: this.state.activePage + 1 }, () => this.getEntities());\n            }\n        };\n        this.loadMore = () => {\n            this.setState({ activePage: this.state.activePage + 1 }, () => this.getEntities());\n            /*this.reset();*/\n        };\n        this.sort = prop => () => {\n            this.setState({\n                order: this.state.order === 'asc' ? 'desc' : 'asc',\n                sort: prop\n            }, () => {\n                this.reset();\n            });\n        };\n        this.hasMore = () => this.state.activePage - 1 < this.props.links.next;\n        this.getEntities = () => {\n            const { activePage, itemsPerPage, sort, order } = this.state;\n            this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\n        };\n    }\n    componentDidMount() {\n        this.reset();\n    }\n    componentDidUpdate() {\n        if (this.props.updateSuccess) {\n            this.reset();\n        }\n    }\n    render() {\n        const { productList, match } = this.props;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"div\", { className: \"table-responsive\" },\n                React.createElement(InfiniteScroll, { pageStart: this.state.activePage, loadMore: this.handleLoadMore, hasMore: this.hasMore, loader: React.createElement(\"div\", { className: \"loader\" }), threshold: 0, initialLoad: false }, productList && productList.length > 0 ? (React.createElement(Container, null,\n                    React.createElement(Row, null, productList.map((product, i) => (React.createElement(Col, { xs: \"12\", sm: \"12\", md: \"4\", key: `entity-${i}`, style: { border: '1px solid grey', marginBottom: '1em' } },\n                        React.createElement(\"a\", { href: product.link, target: \"_blank\", className: \"no-decoration\" }, product.picture ? (React.createElement(\"div\", null,\n                            React.createElement(\"div\", null,\n                                React.createElement(Row, null,\n                                    React.createElement(\"span\", { style: { fontSize: '140%', textAlign: 'center' } }, product.name)),\n                                React.createElement(Row, null,\n                                    React.createElement(Col, { xs: \"12\", sm: \"12\", md: \"6\", style: { padding: '0' } },\n                                        React.createElement(\"img\", { src: `data:${product.pictureContentType};base64,${product.picture}` })),\n                                    React.createElement(Col, { xs: \"12\", sm: \"12\", md: \"5\", style: { textAlign: 'justify' } },\n                                        React.createElement(\"p\", null, product.description))),\n                                React.createElement(Row, null,\n                                    React.createElement(\"p\", { hidden: product.standardPrice === product.currentPrice },\n                                        \"De: R$\",\n                                        product.standardPrice.toLocaleString(undefined, { minimumFractionDigits: 2 }),\n                                        \"\\u00A0\"),\n                                    React.createElement(\"p\", null,\n                                        React.createElement(\"span\", { hidden: product.standardPrice === product.currentPrice }, \"Por: \"),\n                                        React.createElement(\"span\", { hidden: product.standardPrice !== product.currentPrice }, \"Pre\\u00E7o: \"),\n                                        \"R$ \",\n                                        product.currentPrice.toLocaleString(undefined, { minimumFractionDigits: 2 }))),\n                                React.createElement(Row, null,\n                                    React.createElement(\"strong\", null, \"Tamanhos: \"),\n                                    product.sizes\n                                        .sort((s1, s2) => s1.id - s2.id)\n                                        .map((size, j) => (React.createElement(\"p\", null,\n                                        size.description,\n                                        \"\\u00A0\"))))))) : null))))))) : (React.createElement(\"div\", { className: \"alert alert-warning\" },\n                    React.createElement(Translate, { contentKey: \"pluscapeApp.product.home.notFound\" }, \"No Products found\")))),\n                React.createElement(\"a\", { hidden: !this.hasMore(), onClick: this.loadMore }, \"Carregar mais produtos...\"))));\n    }\n}\nconst mapStateToProps = ({ product }) => ({\n    productList: product.entities,\n    totalItems: product.totalItems,\n    links: product.links,\n    entity: product.entity,\n    updateSuccess: product.updateSuccess\n});\nconst mapDispatchToProps = {\n    getEntities,\n    reset\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Pluscape);\n",{"version":3,"file":"/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/pluscape/pluscape.tsx","sourceRoot":"","sources":["/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/pluscape/pluscape.tsx"],"names":[],"mappings":"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","sourcesContent":["import './pluscape.scss';\n\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Container, Col, Row, Table } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { openFile, byteSize, Translate, ICrudGetAllAction, getSortState, IPaginationBaseState } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities, reset } from 'app/entities/product/product.reducer';\nimport { IProduct } from 'app/shared/model/product.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\n\nexport interface IProductProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport type IProductState = IPaginationBaseState;\n\nexport class Pluscape extends React.Component<IProductProps, IProductState> {\n  state: IProductState = {\n    ...getSortState(this.props.location, 3),\n    sort: 'currentPrice',\n    order: 'desc'\n  };\n\n  componentDidMount() {\n    this.reset();\n  }\n\n  componentDidUpdate() {\n    if (this.props.updateSuccess) {\n      this.reset();\n    }\n  }\n\n  reset = () => {\n    this.props.reset();\n    this.setState({ activePage: 1 }, () => {\n      this.getEntities();\n    });\n  };\n\n  handleLoadMore = () => {\n    if (window.pageYOffset > 0) {\n      this.setState({ activePage: this.state.activePage + 1 }, () => this.getEntities());\n    }\n  };\n\n  loadMore = () => {\n    this.setState({ activePage: this.state.activePage + 1 }, () => this.getEntities());\n    /*this.reset();*/\n  };\n\n  sort = prop => () => {\n    this.setState(\n      {\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\n        sort: prop\n      },\n      () => {\n        this.reset();\n      }\n    );\n  };\n\n  hasMore = () => this.state.activePage - 1 < this.props.links.next;\n\n  getEntities = () => {\n    const { activePage, itemsPerPage, sort, order } = this.state;\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\n  };\n\n  render() {\n    const { productList, match } = this.props;\n    return (\n      <div>\n        <div className=\"table-responsive\">\n          <InfiniteScroll\n            pageStart={this.state.activePage}\n            loadMore={this.handleLoadMore}\n            hasMore={this.hasMore}\n            loader={<div className=\"loader\" />}\n            threshold={0}\n            initialLoad={false}\n          >\n            {productList && productList.length > 0 ? (\n              <Container>\n                <Row>\n                  {productList.map((product, i) => (\n                    <Col xs=\"12\" sm=\"12\" md=\"4\" key={`entity-${i}`} style={{ border: '1px solid grey', marginBottom: '1em' }}>\n                      <a href={product.link} target=\"_blank\" className=\"no-decoration\">\n                        {product.picture ? (\n                          <div>\n                            <div>\n                              <Row>\n                                <span style={{ fontSize: '140%', textAlign: 'center' }}>{product.name}</span>\n                              </Row>\n                              <Row>\n                                <Col xs=\"12\" sm=\"12\" md=\"6\" style={{ padding: '0' }}>\n                                  <img src={`data:${product.pictureContentType};base64,${product.picture}`} />\n                                </Col>\n                                <Col xs=\"12\" sm=\"12\" md=\"5\" style={{ textAlign: 'justify' }}>\n                                  <p>{product.description}</p>\n                                </Col>\n                              </Row>\n                              <Row>\n                                <p hidden={product.standardPrice === product.currentPrice}>\n                                  De: R${product.standardPrice.toLocaleString(undefined, { minimumFractionDigits: 2 })}&nbsp;\n                                </p>\n                                <p>\n                                  <span hidden={product.standardPrice === product.currentPrice}>Por: </span>\n                                  <span hidden={product.standardPrice !== product.currentPrice}>Preço: </span>\n                                  R$ {product.currentPrice.toLocaleString(undefined, { minimumFractionDigits: 2 })}\n                                </p>\n                              </Row>\n                              <Row>\n                                <strong>Tamanhos: </strong>\n                                {product.sizes\n                                  .sort((s1, s2) => s1.id - s2.id)\n                                  .map((size, j) => (\n                                    <p>{size.description}&nbsp;</p>\n                                  ))}\n                              </Row>\n                            </div>\n                          </div>\n                        ) : null}\n                      </a>\n                    </Col>\n                  ))}\n                </Row>\n              </Container>\n            ) : (\n              <div className=\"alert alert-warning\">\n                <Translate contentKey=\"pluscapeApp.product.home.notFound\">No Products found</Translate>\n              </div>\n            )}\n          </InfiniteScroll>\n          <a hidden={!this.hasMore()} onClick={this.loadMore}>\n            Carregar mais produtos...\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ product }: IRootState) => ({\n  productList: product.entities,\n  totalItems: product.totalItems,\n  links: product.links,\n  entity: product.entity,\n  updateSuccess: product.updateSuccess\n});\n\nconst mapDispatchToProps = {\n  getEntities,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Pluscape);\n"]}]}