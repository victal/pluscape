{"remainingRequest":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js??ref--4-3!/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/config/axios-interceptor.ts","dependencies":[{"path":"/home/guilherme/workspace/jhipster/src/main/webapp/app/config/axios-interceptor.ts","mtime":1560712705215},{"path":"/home/guilherme/workspace/jhipster/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { Storage } from 'react-jhipster';\nimport { SERVER_API_URL } from 'app/config/constants';\nconst TIMEOUT = 1 * 60 * 1000;\naxios.defaults.timeout = TIMEOUT;\naxios.defaults.baseURL = SERVER_API_URL;\nconst setupAxiosInterceptors = onUnauthenticated => {\n    const onRequestSuccess = config => {\n        const token = Storage.local.get('jhi-authenticationToken') || Storage.session.get('jhi-authenticationToken');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    };\n    const onResponseSuccess = response => response;\n    const onResponseError = err => {\n        const status = err.status || (err.response ? err.response.status : 0);\n        if (status === 403 || status === 401) {\n            onUnauthenticated();\n        }\n        return Promise.reject(err);\n    };\n    axios.interceptors.request.use(onRequestSuccess);\n    axios.interceptors.response.use(onResponseSuccess, onResponseError);\n};\nexport default setupAxiosInterceptors;\n",{"version":3,"file":"/home/guilherme/workspace/jhipster/src/main/webapp/app/config/axios-interceptor.ts","sourceRoot":"","sources":["/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/config/axios-interceptor.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAe,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEtD,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAEtD,MAAM,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;AAC9B,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;AACjC,KAAK,CAAC,QAAQ,CAAC,OAAO,GAAG,cAAc,CAAC;AAExC,MAAM,sBAAsB,GAAG,iBAAiB,CAAC,EAAE;IACjD,MAAM,gBAAgB,GAAG,MAAM,CAAC,EAAE;QAChC,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,yBAAyB,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QAC7G,IAAI,KAAK,EAAE;YACT,MAAM,CAAC,OAAO,CAAC,aAAa,GAAG,UAAU,KAAK,EAAE,CAAC;SAClD;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;IACF,MAAM,iBAAiB,GAAG,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;IAC/C,MAAM,eAAe,GAAG,GAAG,CAAC,EAAE;QAC5B,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACpC,iBAAiB,EAAE,CAAC;SACrB;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC;IACF,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IACjD,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,EAAE,eAAe,CAAC,CAAC;AACtE,CAAC,CAAC;AAEF,eAAe,sBAAsB,CAAC","sourcesContent":["import axios from 'axios';\nimport { getBasePath, Storage } from 'react-jhipster';\n\nimport { SERVER_API_URL } from 'app/config/constants';\n\nconst TIMEOUT = 1 * 60 * 1000;\naxios.defaults.timeout = TIMEOUT;\naxios.defaults.baseURL = SERVER_API_URL;\n\nconst setupAxiosInterceptors = onUnauthenticated => {\n  const onRequestSuccess = config => {\n    const token = Storage.local.get('jhi-authenticationToken') || Storage.session.get('jhi-authenticationToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  };\n  const onResponseSuccess = response => response;\n  const onResponseError = err => {\n    const status = err.status || (err.response ? err.response.status : 0);\n    if (status === 403 || status === 401) {\n      onUnauthenticated();\n    }\n    return Promise.reject(err);\n  };\n  axios.interceptors.request.use(onRequestSuccess);\n  axios.interceptors.response.use(onResponseSuccess, onResponseError);\n};\n\nexport default setupAxiosInterceptors;\n"]}]}