{"remainingRequest":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js??ref--4-3!/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/product/product.tsx","dependencies":[{"path":"/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/product/product.tsx","mtime":1560817081454},{"path":"/home/guilherme/workspace/jhipster/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Table } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { openFile, byteSize, Translate, getSortState } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getEntities, reset } from './product.reducer';\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\nexport class Product extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = Object.assign({}, getSortState(this.props.location, ITEMS_PER_PAGE));\n        this.reset = () => {\n            this.props.reset();\n            this.setState({ activePage: 1 }, () => {\n                this.getEntities();\n            });\n        };\n        this.handleLoadMore = () => {\n            if (window.pageYOffset > 0) {\n                this.setState({ activePage: this.state.activePage + 1 }, () => this.getEntities());\n            }\n        };\n        this.sort = prop => () => {\n            this.setState({\n                order: this.state.order === 'asc' ? 'desc' : 'asc',\n                sort: prop\n            }, () => {\n                this.reset();\n            });\n        };\n        this.getEntities = () => {\n            const { activePage, itemsPerPage, sort, order } = this.state;\n            this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\n        };\n    }\n    componentDidMount() {\n        this.reset();\n    }\n    componentDidUpdate() {\n        if (this.props.updateSuccess) {\n            this.reset();\n        }\n    }\n    render() {\n        const { productList, match } = this.props;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h2\", { id: \"product-heading\" },\n                React.createElement(Translate, { contentKey: \"pluscapeApp.product.home.title\" }, \"Products\"),\n                React.createElement(Link, { to: `${match.url}/new`, className: \"btn btn-primary float-right jh-create-entity\", id: \"jh-create-entity\" },\n                    React.createElement(FontAwesomeIcon, { icon: \"plus\" }),\n                    \"\\u00A0\",\n                    React.createElement(Translate, { contentKey: \"pluscapeApp.product.home.createLabel\" }, \"Create new Product\"))),\n            React.createElement(\"div\", { className: \"table-responsive\" },\n                React.createElement(InfiniteScroll, { pageStart: this.state.activePage, loadMore: this.handleLoadMore, hasMore: this.state.activePage - 1 < this.props.links.next, loader: React.createElement(\"div\", { className: \"loader\" }, \"Loading ...\"), threshold: 0, initialLoad: false }, productList && productList.length > 0 ? (React.createElement(Table, { responsive: true },\n                    React.createElement(\"thead\", null,\n                        React.createElement(\"tr\", null,\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('id') },\n                                React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\"),\n                                \" \",\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('name') },\n                                React.createElement(Translate, { contentKey: \"pluscapeApp.product.name\" }, \"Name\"),\n                                \" \",\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('description') },\n                                React.createElement(Translate, { contentKey: \"pluscapeApp.product.description\" }, \"Description\"),\n                                \" \",\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('currentPrice') },\n                                React.createElement(Translate, { contentKey: \"pluscapeApp.product.currentPrice\" }, \"Current Price\"),\n                                \" \",\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('standardPrice') },\n                                React.createElement(Translate, { contentKey: \"pluscapeApp.product.standardPrice\" }, \"Standard Price\"),\n                                \" \",\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('link') },\n                                React.createElement(Translate, { contentKey: \"pluscapeApp.product.link\" }, \"Link\"),\n                                \" \",\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\n                            React.createElement(\"th\", { className: \"hand\", onClick: this.sort('picture') },\n                                React.createElement(Translate, { contentKey: \"pluscapeApp.product.picture\" }, \"Picture\"),\n                                \" \",\n                                React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\n                            React.createElement(\"th\", null))),\n                    React.createElement(\"tbody\", null, productList.map((product, i) => (React.createElement(\"tr\", { key: `entity-${i}` },\n                        React.createElement(\"td\", null,\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${product.id}`, color: \"link\", size: \"sm\" }, product.id)),\n                        React.createElement(\"td\", null, product.name),\n                        React.createElement(\"td\", null, product.description),\n                        React.createElement(\"td\", null, product.currentPrice),\n                        React.createElement(\"td\", null, product.standardPrice),\n                        React.createElement(\"td\", null, product.link),\n                        React.createElement(\"td\", null, product.picture ? (React.createElement(\"div\", null,\n                            React.createElement(\"a\", { onClick: openFile(product.pictureContentType, product.picture) },\n                                React.createElement(\"img\", { src: `data:${product.pictureContentType};base64,${product.picture}`, style: { maxHeight: '30px' } }),\n                                \"\\u00A0\"),\n                            React.createElement(\"span\", null,\n                                product.pictureContentType,\n                                \", \",\n                                byteSize(product.picture)))) : null),\n                        React.createElement(\"td\", { className: \"text-right\" },\n                            React.createElement(\"div\", { className: \"btn-group flex-btn-group-container\" },\n                                React.createElement(Button, { tag: Link, to: `${match.url}/${product.id}`, color: \"info\", size: \"sm\" },\n                                    React.createElement(FontAwesomeIcon, { icon: \"eye\" }),\n                                    ' ',\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                                        React.createElement(Translate, { contentKey: \"entity.action.view\" }, \"View\"))),\n                                React.createElement(Button, { tag: Link, to: `${match.url}/${product.id}/edit`, color: \"primary\", size: \"sm\" },\n                                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\n                                    ' ',\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))),\n                                React.createElement(Button, { tag: Link, to: `${match.url}/${product.id}/delete`, color: \"danger\", size: \"sm\" },\n                                    React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\n                                    ' ',\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                                        React.createElement(Translate, { contentKey: \"entity.action.delete\" }, \"Delete\"))))))))))) : (React.createElement(\"div\", { className: \"alert alert-warning\" },\n                    React.createElement(Translate, { contentKey: \"pluscapeApp.product.home.notFound\" }, \"No Products found\")))))));\n    }\n}\nconst mapStateToProps = ({ product }) => ({\n    productList: product.entities,\n    totalItems: product.totalItems,\n    links: product.links,\n    entity: product.entity,\n    updateSuccess: product.updateSuccess\n});\nconst mapDispatchToProps = {\n    getEntities,\n    reset\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);\n",{"version":3,"file":"/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/product/product.tsx","sourceRoot":"","sources":["/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/product/product.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Row, Table } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { openFile, byteSize, Translate, ICrudGetAllAction, getSortState, IPaginationBaseState } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities, reset } from './product.reducer';\nimport { IProduct } from 'app/shared/model/product.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\n\nexport interface IProductProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport type IProductState = IPaginationBaseState;\n\nexport class Product extends React.Component<IProductProps, IProductState> {\n  state: IProductState = {\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\n  };\n\n  componentDidMount() {\n    this.reset();\n  }\n\n  componentDidUpdate() {\n    if (this.props.updateSuccess) {\n      this.reset();\n    }\n  }\n\n  reset = () => {\n    this.props.reset();\n    this.setState({ activePage: 1 }, () => {\n      this.getEntities();\n    });\n  };\n\n  handleLoadMore = () => {\n    if (window.pageYOffset > 0) {\n      this.setState({ activePage: this.state.activePage + 1 }, () => this.getEntities());\n    }\n  };\n\n  sort = prop => () => {\n    this.setState(\n      {\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\n        sort: prop\n      },\n      () => {\n        this.reset();\n      }\n    );\n  };\n\n  getEntities = () => {\n    const { activePage, itemsPerPage, sort, order } = this.state;\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\n  };\n\n  render() {\n    const { productList, match } = this.props;\n    return (\n      <div>\n        <h2 id=\"product-heading\">\n          <Translate contentKey=\"pluscapeApp.product.home.title\">Products</Translate>\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\n            <FontAwesomeIcon icon=\"plus\" />\n            &nbsp;\n            <Translate contentKey=\"pluscapeApp.product.home.createLabel\">Create new Product</Translate>\n          </Link>\n        </h2>\n        <div className=\"table-responsive\">\n          <InfiniteScroll\n            pageStart={this.state.activePage}\n            loadMore={this.handleLoadMore}\n            hasMore={this.state.activePage - 1 < this.props.links.next}\n            loader={<div className=\"loader\">Loading ...</div>}\n            threshold={0}\n            initialLoad={false}\n          >\n            {productList && productList.length > 0 ? (\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th className=\"hand\" onClick={this.sort('id')}>\n                      <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\n                    </th>\n                    <th className=\"hand\" onClick={this.sort('name')}>\n                      <Translate contentKey=\"pluscapeApp.product.name\">Name</Translate> <FontAwesomeIcon icon=\"sort\" />\n                    </th>\n                    <th className=\"hand\" onClick={this.sort('description')}>\n                      <Translate contentKey=\"pluscapeApp.product.description\">Description</Translate> <FontAwesomeIcon icon=\"sort\" />\n                    </th>\n                    <th className=\"hand\" onClick={this.sort('currentPrice')}>\n                      <Translate contentKey=\"pluscapeApp.product.currentPrice\">Current Price</Translate> <FontAwesomeIcon icon=\"sort\" />\n                    </th>\n                    <th className=\"hand\" onClick={this.sort('standardPrice')}>\n                      <Translate contentKey=\"pluscapeApp.product.standardPrice\">Standard Price</Translate> <FontAwesomeIcon icon=\"sort\" />\n                    </th>\n                    <th className=\"hand\" onClick={this.sort('link')}>\n                      <Translate contentKey=\"pluscapeApp.product.link\">Link</Translate> <FontAwesomeIcon icon=\"sort\" />\n                    </th>\n                    <th className=\"hand\" onClick={this.sort('picture')}>\n                      <Translate contentKey=\"pluscapeApp.product.picture\">Picture</Translate> <FontAwesomeIcon icon=\"sort\" />\n                    </th>\n                    <th />\n                  </tr>\n                </thead>\n                <tbody>\n                  {productList.map((product, i) => (\n                    <tr key={`entity-${i}`}>\n                      <td>\n                        <Button tag={Link} to={`${match.url}/${product.id}`} color=\"link\" size=\"sm\">\n                          {product.id}\n                        </Button>\n                      </td>\n                      <td>{product.name}</td>\n                      <td>{product.description}</td>\n                      <td>{product.currentPrice}</td>\n                      <td>{product.standardPrice}</td>\n                      <td>{product.link}</td>\n                      <td>\n                        {product.picture ? (\n                          <div>\n                            <a onClick={openFile(product.pictureContentType, product.picture)}>\n                              <img src={`data:${product.pictureContentType};base64,${product.picture}`} style={{ maxHeight: '30px' }} />\n                              &nbsp;\n                            </a>\n                            <span>\n                              {product.pictureContentType}, {byteSize(product.picture)}\n                            </span>\n                          </div>\n                        ) : null}\n                      </td>\n                      <td className=\"text-right\">\n                        <div className=\"btn-group flex-btn-group-container\">\n                          <Button tag={Link} to={`${match.url}/${product.id}`} color=\"info\" size=\"sm\">\n                            <FontAwesomeIcon icon=\"eye\" />{' '}\n                            <span className=\"d-none d-md-inline\">\n                              <Translate contentKey=\"entity.action.view\">View</Translate>\n                            </span>\n                          </Button>\n                          <Button tag={Link} to={`${match.url}/${product.id}/edit`} color=\"primary\" size=\"sm\">\n                            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n                            <span className=\"d-none d-md-inline\">\n                              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n                            </span>\n                          </Button>\n                          <Button tag={Link} to={`${match.url}/${product.id}/delete`} color=\"danger\" size=\"sm\">\n                            <FontAwesomeIcon icon=\"trash\" />{' '}\n                            <span className=\"d-none d-md-inline\">\n                              <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n                            </span>\n                          </Button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            ) : (\n              <div className=\"alert alert-warning\">\n                <Translate contentKey=\"pluscapeApp.product.home.notFound\">No Products found</Translate>\n              </div>\n            )}\n          </InfiniteScroll>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ product }: IRootState) => ({\n  productList: product.entities,\n  totalItems: product.totalItems,\n  links: product.links,\n  entity: product.entity,\n  updateSuccess: product.updateSuccess\n});\n\nconst mapDispatchToProps = {\n  getEntities,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Product);\n"]}]}