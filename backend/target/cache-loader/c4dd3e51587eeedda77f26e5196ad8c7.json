{"remainingRequest":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js??ref--4-2!/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/size/size.tsx","dependencies":[{"path":"/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/size/size.tsx","mtime":1560712705215},{"path":"/home/guilherme/workspace/jhipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Table } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getEntities } from './size.reducer';\nexport class Size extends React.Component {\n    componentDidMount() {\n        this.props.getEntities();\n    }\n    render() {\n        const { sizeList, match } = this.props;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h2\", { id: \"size-heading\" },\n                React.createElement(Translate, { contentKey: \"pluscapeApp.size.home.title\" }, \"Sizes\"),\n                React.createElement(Link, { to: `${match.url}/new`, className: \"btn btn-primary float-right jh-create-entity\", id: \"jh-create-entity\" },\n                    React.createElement(FontAwesomeIcon, { icon: \"plus\" }),\n                    \"\\u00A0\",\n                    React.createElement(Translate, { contentKey: \"pluscapeApp.size.home.createLabel\" }, \"Create new Size\"))),\n            React.createElement(\"div\", { className: \"table-responsive\" }, sizeList && sizeList.length > 0 ? (React.createElement(Table, { responsive: true },\n                React.createElement(\"thead\", null,\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"th\", null,\n                            React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\n                        React.createElement(\"th\", null,\n                            React.createElement(Translate, { contentKey: \"pluscapeApp.size.description\" }, \"Description\")),\n                        React.createElement(\"th\", null))),\n                React.createElement(\"tbody\", null, sizeList.map((size, i) => (React.createElement(\"tr\", { key: `entity-${i}` },\n                    React.createElement(\"td\", null,\n                        React.createElement(Button, { tag: Link, to: `${match.url}/${size.id}`, color: \"link\", size: \"sm\" }, size.id)),\n                    React.createElement(\"td\", null, size.description),\n                    React.createElement(\"td\", { className: \"text-right\" },\n                        React.createElement(\"div\", { className: \"btn-group flex-btn-group-container\" },\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${size.id}`, color: \"info\", size: \"sm\" },\n                                React.createElement(FontAwesomeIcon, { icon: \"eye\" }),\n                                ' ',\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                                    React.createElement(Translate, { contentKey: \"entity.action.view\" }, \"View\"))),\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${size.id}/edit`, color: \"primary\", size: \"sm\" },\n                                React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\n                                ' ',\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                                    React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))),\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${size.id}/delete`, color: \"danger\", size: \"sm\" },\n                                React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\n                                ' ',\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                                    React.createElement(Translate, { contentKey: \"entity.action.delete\" }, \"Delete\"))))))))))) : (React.createElement(\"div\", { className: \"alert alert-warning\" },\n                React.createElement(Translate, { contentKey: \"pluscapeApp.size.home.notFound\" }, \"No Sizes found\"))))));\n    }\n}\nconst mapStateToProps = ({ size }) => ({\n    sizeList: size.entities\n});\nconst mapDispatchToProps = {\n    getEntities\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Size);\n",{"version":3,"file":"/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/size/size.tsx","sourceRoot":"","sources":["/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/size/size.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Row, Table } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities } from './size.reducer';\nimport { ISize } from 'app/shared/model/size.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface ISizeProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport class Size extends React.Component<ISizeProps> {\n  componentDidMount() {\n    this.props.getEntities();\n  }\n\n  render() {\n    const { sizeList, match } = this.props;\n    return (\n      <div>\n        <h2 id=\"size-heading\">\n          <Translate contentKey=\"pluscapeApp.size.home.title\">Sizes</Translate>\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\n            <FontAwesomeIcon icon=\"plus\" />\n            &nbsp;\n            <Translate contentKey=\"pluscapeApp.size.home.createLabel\">Create new Size</Translate>\n          </Link>\n        </h2>\n        <div className=\"table-responsive\">\n          {sizeList && sizeList.length > 0 ? (\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th>\n                    <Translate contentKey=\"global.field.id\">ID</Translate>\n                  </th>\n                  <th>\n                    <Translate contentKey=\"pluscapeApp.size.description\">Description</Translate>\n                  </th>\n                  <th />\n                </tr>\n              </thead>\n              <tbody>\n                {sizeList.map((size, i) => (\n                  <tr key={`entity-${i}`}>\n                    <td>\n                      <Button tag={Link} to={`${match.url}/${size.id}`} color=\"link\" size=\"sm\">\n                        {size.id}\n                      </Button>\n                    </td>\n                    <td>{size.description}</td>\n                    <td className=\"text-right\">\n                      <div className=\"btn-group flex-btn-group-container\">\n                        <Button tag={Link} to={`${match.url}/${size.id}`} color=\"info\" size=\"sm\">\n                          <FontAwesomeIcon icon=\"eye\" />{' '}\n                          <span className=\"d-none d-md-inline\">\n                            <Translate contentKey=\"entity.action.view\">View</Translate>\n                          </span>\n                        </Button>\n                        <Button tag={Link} to={`${match.url}/${size.id}/edit`} color=\"primary\" size=\"sm\">\n                          <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n                          <span className=\"d-none d-md-inline\">\n                            <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n                          </span>\n                        </Button>\n                        <Button tag={Link} to={`${match.url}/${size.id}/delete`} color=\"danger\" size=\"sm\">\n                          <FontAwesomeIcon icon=\"trash\" />{' '}\n                          <span className=\"d-none d-md-inline\">\n                            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n                          </span>\n                        </Button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          ) : (\n            <div className=\"alert alert-warning\">\n              <Translate contentKey=\"pluscapeApp.size.home.notFound\">No Sizes found</Translate>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ size }: IRootState) => ({\n  sizeList: size.entities\n});\n\nconst mapDispatchToProps = {\n  getEntities\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Size);\n"]}]}