{"remainingRequest":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js??ref--4-2!/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/account/activate/activate.reducer.ts","dependencies":[{"path":"/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/account/activate/activate.reducer.ts","mtime":1560712705215},{"path":"/home/guilherme/workspace/jhipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\nexport const ACTION_TYPES = {\n    ACTIVATE_ACCOUNT: 'activate/ACTIVATE_ACCOUNT',\n    RESET: 'activate/RESET'\n};\nconst initialState = {\n    activationSuccess: false,\n    activationFailure: false\n};\n// Reducer\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST(ACTION_TYPES.ACTIVATE_ACCOUNT):\n            return Object.assign({}, state);\n        case FAILURE(ACTION_TYPES.ACTIVATE_ACCOUNT):\n            return Object.assign({}, state, { activationFailure: true });\n        case SUCCESS(ACTION_TYPES.ACTIVATE_ACCOUNT):\n            return Object.assign({}, state, { activationSuccess: true });\n        case ACTION_TYPES.RESET:\n            return Object.assign({}, initialState);\n        default:\n            return state;\n    }\n};\n// Actions\nexport const activateAction = key => ({\n    type: ACTION_TYPES.ACTIVATE_ACCOUNT,\n    payload: axios.get('api/activate?key=' + key)\n});\nexport const reset = () => ({\n    type: ACTION_TYPES.RESET\n});\n",{"version":3,"file":"/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/account/activate/activate.reducer.ts","sourceRoot":"","sources":["/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/account/activate/activate.reducer.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAEjF,MAAM,CAAC,MAAM,YAAY,GAAG;IAC1B,gBAAgB,EAAE,2BAA2B;IAC7C,KAAK,EAAE,gBAAgB;CACxB,CAAC;AAEF,MAAM,YAAY,GAAG;IACnB,iBAAiB,EAAE,KAAK;IACxB,iBAAiB,EAAE,KAAK;CACzB,CAAC;AAIF,UAAU;AACV,eAAe,CAAC,QAAuB,YAAY,EAAE,MAAM,EAAiB,EAAE;IAC5E,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,OAAO,CAAC,YAAY,CAAC,gBAAgB,CAAC;YACzC,yBACK,KAAK,EACR;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,gBAAgB,CAAC;YACzC,yBACK,KAAK,IACR,iBAAiB,EAAE,IAAI,IACvB;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,gBAAgB,CAAC;YACzC,yBACK,KAAK,IACR,iBAAiB,EAAE,IAAI,IACvB;QACJ,KAAK,YAAY,CAAC,KAAK;YACrB,yBACK,YAAY,EACf;QACJ;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,CAAC;AAEF,UAAU;AACV,MAAM,CAAC,MAAM,cAAc,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;IACpC,IAAI,EAAE,YAAY,CAAC,gBAAgB;IACnC,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,mBAAmB,GAAG,GAAG,CAAC;CAC9C,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,CAAC;IAC1B,IAAI,EAAE,YAAY,CAAC,KAAK;CACzB,CAAC,CAAC","sourcesContent":["import axios from 'axios';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nexport const ACTION_TYPES = {\n  ACTIVATE_ACCOUNT: 'activate/ACTIVATE_ACCOUNT',\n  RESET: 'activate/RESET'\n};\n\nconst initialState = {\n  activationSuccess: false,\n  activationFailure: false\n};\n\nexport type ActivateState = Readonly<typeof initialState>;\n\n// Reducer\nexport default (state: ActivateState = initialState, action): ActivateState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.ACTIVATE_ACCOUNT):\n      return {\n        ...state\n      };\n    case FAILURE(ACTION_TYPES.ACTIVATE_ACCOUNT):\n      return {\n        ...state,\n        activationFailure: true\n      };\n    case SUCCESS(ACTION_TYPES.ACTIVATE_ACCOUNT):\n      return {\n        ...state,\n        activationSuccess: true\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\nexport const activateAction = key => ({\n  type: ACTION_TYPES.ACTIVATE_ACCOUNT,\n  payload: axios.get('api/activate?key=' + key)\n});\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n"]}]}