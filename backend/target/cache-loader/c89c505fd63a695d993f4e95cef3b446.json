{"remainingRequest":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js??ref--4-3!/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/shared/util/entity-utils.ts","dependencies":[{"path":"/home/guilherme/workspace/jhipster/src/main/webapp/app/shared/util/entity-utils.ts","mtime":1560712705219},{"path":"/home/guilherme/workspace/jhipster/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import pick from 'lodash/pick';\n/**\n * Removes fields with an 'id' field that equals ''.\n * This function was created to prevent entities to be sent to\n * the server with relationship fields with empty an empty id and thus\n * resulting in a 500.\n *\n * @param entity Object to clean.\n */\nexport const cleanEntity = entity => {\n    const keysToKeep = Object.keys(entity).filter(k => !(entity[k] instanceof Object) || (entity[k]['id'] !== '' && entity[k]['id'] !== -1));\n    return pick(entity, keysToKeep);\n};\n/**\n * Simply map a list of element to a list a object with the element as id.\n *\n * @param idList Elements to map.\n * @returns The list of objects with mapped ids.\n */\nexport const mapIdList = (idList) => idList.filter((entityId) => entityId !== '').map((entityId) => ({ id: entityId }));\n",{"version":3,"file":"/home/guilherme/workspace/jhipster/src/main/webapp/app/shared/util/entity-utils.ts","sourceRoot":"","sources":["/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/shared/util/entity-utils.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,aAAa,CAAC;AAE/B;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,WAAW,GAAG,MAAM,CAAC,EAAE;IAClC,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAEzI,OAAO,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAClC,CAAC,CAAC;AAEF;;;;;GAKG;AACH,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,MAA0B,EAAE,EAAE,CACtD,MAAM,CAAC,MAAM,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC","sourcesContent":["import pick from 'lodash/pick';\n\n/**\n * Removes fields with an 'id' field that equals ''.\n * This function was created to prevent entities to be sent to\n * the server with relationship fields with empty an empty id and thus\n * resulting in a 500.\n *\n * @param entity Object to clean.\n */\nexport const cleanEntity = entity => {\n  const keysToKeep = Object.keys(entity).filter(k => !(entity[k] instanceof Object) || (entity[k]['id'] !== '' && entity[k]['id'] !== -1));\n\n  return pick(entity, keysToKeep);\n};\n\n/**\n * Simply map a list of element to a list a object with the element as id.\n *\n * @param idList Elements to map.\n * @returns The list of objects with mapped ids.\n */\nexport const mapIdList = (idList: ReadonlyArray<any>) =>\n  idList.filter((entityId: any) => entityId !== '').map((entityId: any) => ({ id: entityId }));\n"]}]}