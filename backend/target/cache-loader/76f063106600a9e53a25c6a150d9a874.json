{"remainingRequest":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js??ref--4-3!/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/account/register/register.reducer.ts","dependencies":[{"path":"/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/account/register/register.reducer.ts","mtime":1560712705215},{"path":"/home/guilherme/workspace/jhipster/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { translate } from 'react-jhipster';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\nexport const ACTION_TYPES = {\n    CREATE_ACCOUNT: 'register/CREATE_ACCOUNT',\n    RESET: 'register/RESET'\n};\nconst initialState = {\n    loading: false,\n    registrationSuccess: false,\n    registrationFailure: false,\n    errorMessage: null\n};\n// Reducer\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST(ACTION_TYPES.CREATE_ACCOUNT):\n            return Object.assign({}, state, { loading: true });\n        case FAILURE(ACTION_TYPES.CREATE_ACCOUNT):\n            return Object.assign({}, initialState, { registrationFailure: true, errorMessage: action.payload.response.data.errorKey });\n        case SUCCESS(ACTION_TYPES.CREATE_ACCOUNT):\n            return Object.assign({}, initialState, { registrationSuccess: true });\n        case ACTION_TYPES.RESET:\n            return Object.assign({}, initialState);\n        default:\n            return state;\n    }\n};\n// Actions\nexport const handleRegister = (login, email, password, langKey = 'en') => ({\n    type: ACTION_TYPES.CREATE_ACCOUNT,\n    payload: axios.post('api/register', { login, email, password, langKey }),\n    meta: {\n        successMessage: translate('register.messages.success')\n    }\n});\nexport const reset = () => ({\n    type: ACTION_TYPES.RESET\n});\n",{"version":3,"file":"/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/account/register/register.reducer.ts","sourceRoot":"","sources":["/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/account/register/register.reducer.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAE3C,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAEjF,MAAM,CAAC,MAAM,YAAY,GAAG;IAC1B,cAAc,EAAE,yBAAyB;IACzC,KAAK,EAAE,gBAAgB;CACxB,CAAC;AAEF,MAAM,YAAY,GAAG;IACnB,OAAO,EAAE,KAAK;IACd,mBAAmB,EAAE,KAAK;IAC1B,mBAAmB,EAAE,KAAK;IAC1B,YAAY,EAAE,IAAI;CACnB,CAAC;AAIF,UAAU;AACV,eAAe,CAAC,QAAuB,YAAY,EAAE,MAAM,EAAiB,EAAE;IAC5E,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC;YACvC,yBACK,KAAK,IACR,OAAO,EAAE,IAAI,IACb;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC;YACvC,yBACK,YAAY,IACf,mBAAmB,EAAE,IAAI,EACzB,YAAY,EAAE,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,IACnD;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC;YACvC,yBACK,YAAY,IACf,mBAAmB,EAAE,IAAI,IACzB;QACJ,KAAK,YAAY,CAAC,KAAK;YACrB,yBACK,YAAY,EACf;QACJ;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,CAAC;AAEF,UAAU;AACV,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC;IACzE,IAAI,EAAE,YAAY,CAAC,cAAc;IACjC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC;IACxE,IAAI,EAAE;QACJ,cAAc,EAAE,SAAS,CAAC,2BAA2B,CAAC;KACvD;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,CAAC;IAC1B,IAAI,EAAE,YAAY,CAAC,KAAK;CACzB,CAAC,CAAC","sourcesContent":["import axios from 'axios';\nimport { translate } from 'react-jhipster';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nexport const ACTION_TYPES = {\n  CREATE_ACCOUNT: 'register/CREATE_ACCOUNT',\n  RESET: 'register/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  registrationSuccess: false,\n  registrationFailure: false,\n  errorMessage: null\n};\n\nexport type RegisterState = Readonly<typeof initialState>;\n\n// Reducer\nexport default (state: RegisterState = initialState, action): RegisterState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.CREATE_ACCOUNT):\n      return {\n        ...state,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.CREATE_ACCOUNT):\n      return {\n        ...initialState,\n        registrationFailure: true,\n        errorMessage: action.payload.response.data.errorKey\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_ACCOUNT):\n      return {\n        ...initialState,\n        registrationSuccess: true\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\nexport const handleRegister = (login, email, password, langKey = 'en') => ({\n  type: ACTION_TYPES.CREATE_ACCOUNT,\n  payload: axios.post('api/register', { login, email, password, langKey }),\n  meta: {\n    successMessage: translate('register.messages.success')\n  }\n});\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n"]}]}