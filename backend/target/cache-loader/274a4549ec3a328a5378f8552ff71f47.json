{"remainingRequest":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js??ref--4-3!/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/config/store.ts","dependencies":[{"path":"/home/guilherme/workspace/jhipster/src/main/webapp/app/config/store.ts","mtime":1560712705215},{"path":"/home/guilherme/workspace/jhipster/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import { createStore, applyMiddleware, compose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from 'app/shared/reducers';\nimport DevTools from './devtools';\nimport errorMiddleware from './error-middleware';\nimport notificationMiddleware from './notification-middleware';\nimport loggerMiddleware from './logger-middleware';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nconst defaultMiddlewares = [\n    thunkMiddleware,\n    errorMiddleware,\n    notificationMiddleware,\n    promiseMiddleware,\n    loadingBarMiddleware(),\n    loggerMiddleware\n];\nconst composedMiddlewares = middlewares => process.env.NODE_ENV === 'development'\n    ? compose(applyMiddleware(...defaultMiddlewares, ...middlewares), DevTools.instrument())\n    : compose(applyMiddleware(...defaultMiddlewares, ...middlewares));\nconst initialize = (initialState, middlewares = []) => createStore(reducer, initialState, composedMiddlewares(middlewares));\nexport default initialize;\n",{"version":3,"file":"/home/guilherme/workspace/jhipster/src/main/webapp/app/config/store.ts","sourceRoot":"","sources":["/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/config/store.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAC9D,OAAO,iBAAiB,MAAM,0BAA0B,CAAC;AACzD,OAAO,eAAe,MAAM,aAAa,CAAC;AAC1C,OAAO,OAAuB,MAAM,qBAAqB,CAAC;AAC1D,OAAO,QAAQ,MAAM,YAAY,CAAC;AAClC,OAAO,eAAe,MAAM,oBAAoB,CAAC;AACjD,OAAO,sBAAsB,MAAM,2BAA2B,CAAC;AAC/D,OAAO,gBAAgB,MAAM,qBAAqB,CAAC;AACnD,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAE/D,MAAM,kBAAkB,GAAG;IACzB,eAAe;IACf,eAAe;IACf,sBAAsB;IACtB,iBAAiB;IACjB,oBAAoB,EAAE;IACtB,gBAAgB;CACjB,CAAC;AACF,MAAM,mBAAmB,GAAG,WAAW,CAAC,EAAE,CACxC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa;IACpC,CAAC,CAAC,OAAO,CACL,eAAe,CAAC,GAAG,kBAAkB,EAAE,GAAG,WAAW,CAAC,EACtD,QAAQ,CAAC,UAAU,EAAE,CACtB;IACH,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,kBAAkB,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC;AAEtE,MAAM,UAAU,GAAG,CAAC,YAAyB,EAAE,WAAW,GAAG,EAAE,EAAE,EAAE,CAAC,WAAW,CAAC,OAAO,EAAE,YAAY,EAAE,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC;AAEzI,eAAe,UAAU,CAAC","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer, { IRootState } from 'app/shared/reducers';\nimport DevTools from './devtools';\nimport errorMiddleware from './error-middleware';\nimport notificationMiddleware from './notification-middleware';\nimport loggerMiddleware from './logger-middleware';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\n\nconst defaultMiddlewares = [\n  thunkMiddleware,\n  errorMiddleware,\n  notificationMiddleware,\n  promiseMiddleware,\n  loadingBarMiddleware(),\n  loggerMiddleware\n];\nconst composedMiddlewares = middlewares =>\n  process.env.NODE_ENV === 'development'\n    ? compose(\n        applyMiddleware(...defaultMiddlewares, ...middlewares),\n        DevTools.instrument()\n      )\n    : compose(applyMiddleware(...defaultMiddlewares, ...middlewares));\n\nconst initialize = (initialState?: IRootState, middlewares = []) => createStore(reducer, initialState, composedMiddlewares(middlewares));\n\nexport default initialize;\n"]}]}