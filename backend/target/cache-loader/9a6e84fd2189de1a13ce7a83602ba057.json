{"remainingRequest":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js??ref--4-3!/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/category/category.reducer.ts","dependencies":[{"path":"/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/category/category.reducer.ts","mtime":1560712705215},{"path":"/home/guilherme/workspace/jhipster/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport axios from 'axios';\nimport { parseHeaderForLinks, loadMoreDataWhenScrolled } from 'react-jhipster';\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\nimport { defaultValue } from 'app/shared/model/category.model';\nexport const ACTION_TYPES = {\n    FETCH_CATEGORY_LIST: 'category/FETCH_CATEGORY_LIST',\n    FETCH_CATEGORY: 'category/FETCH_CATEGORY',\n    CREATE_CATEGORY: 'category/CREATE_CATEGORY',\n    UPDATE_CATEGORY: 'category/UPDATE_CATEGORY',\n    DELETE_CATEGORY: 'category/DELETE_CATEGORY',\n    RESET: 'category/RESET'\n};\nconst initialState = {\n    loading: false,\n    errorMessage: null,\n    entities: [],\n    entity: defaultValue,\n    links: { next: 0 },\n    updating: false,\n    totalItems: 0,\n    updateSuccess: false\n};\n// Reducer\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST(ACTION_TYPES.FETCH_CATEGORY_LIST):\n        case REQUEST(ACTION_TYPES.FETCH_CATEGORY):\n            return Object.assign({}, state, { errorMessage: null, updateSuccess: false, loading: true });\n        case REQUEST(ACTION_TYPES.CREATE_CATEGORY):\n        case REQUEST(ACTION_TYPES.UPDATE_CATEGORY):\n        case REQUEST(ACTION_TYPES.DELETE_CATEGORY):\n            return Object.assign({}, state, { errorMessage: null, updateSuccess: false, updating: true });\n        case FAILURE(ACTION_TYPES.FETCH_CATEGORY_LIST):\n        case FAILURE(ACTION_TYPES.FETCH_CATEGORY):\n        case FAILURE(ACTION_TYPES.CREATE_CATEGORY):\n        case FAILURE(ACTION_TYPES.UPDATE_CATEGORY):\n        case FAILURE(ACTION_TYPES.DELETE_CATEGORY):\n            return Object.assign({}, state, { loading: false, updating: false, updateSuccess: false, errorMessage: action.payload });\n        case SUCCESS(ACTION_TYPES.FETCH_CATEGORY_LIST):\n            const links = parseHeaderForLinks(action.payload.headers.link);\n            return Object.assign({}, state, { loading: false, links, entities: loadMoreDataWhenScrolled(state.entities, action.payload.data, links), totalItems: parseInt(action.payload.headers['x-total-count'], 10) });\n        case SUCCESS(ACTION_TYPES.FETCH_CATEGORY):\n            return Object.assign({}, state, { loading: false, entity: action.payload.data });\n        case SUCCESS(ACTION_TYPES.CREATE_CATEGORY):\n        case SUCCESS(ACTION_TYPES.UPDATE_CATEGORY):\n            return Object.assign({}, state, { updating: false, updateSuccess: true, entity: action.payload.data });\n        case SUCCESS(ACTION_TYPES.DELETE_CATEGORY):\n            return Object.assign({}, state, { updating: false, updateSuccess: true, entity: {} });\n        case ACTION_TYPES.RESET:\n            return Object.assign({}, initialState);\n        default:\n            return state;\n    }\n};\nconst apiUrl = 'api/categories';\n// Actions\nexport const getEntities = (page, size, sort) => {\n    const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\n    return {\n        type: ACTION_TYPES.FETCH_CATEGORY_LIST,\n        payload: axios.get(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\n    };\n};\nexport const getEntity = id => {\n    const requestUrl = `${apiUrl}/${id}`;\n    return {\n        type: ACTION_TYPES.FETCH_CATEGORY,\n        payload: axios.get(requestUrl)\n    };\n};\nexport const createEntity = entity => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    const result = yield dispatch({\n        type: ACTION_TYPES.CREATE_CATEGORY,\n        payload: axios.post(apiUrl, cleanEntity(entity))\n    });\n    return result;\n});\nexport const updateEntity = entity => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    const result = yield dispatch({\n        type: ACTION_TYPES.UPDATE_CATEGORY,\n        payload: axios.put(apiUrl, cleanEntity(entity))\n    });\n    return result;\n});\nexport const deleteEntity = id => (dispatch) => tslib_1.__awaiter(this, void 0, void 0, function* () {\n    const requestUrl = `${apiUrl}/${id}`;\n    const result = yield dispatch({\n        type: ACTION_TYPES.DELETE_CATEGORY,\n        payload: axios.delete(requestUrl)\n    });\n    return result;\n});\nexport const reset = () => ({\n    type: ACTION_TYPES.RESET\n});\n",{"version":3,"file":"/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/category/category.reducer.ts","sourceRoot":"","sources":["/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/category/category.reducer.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  parseHeaderForLinks,\n  loadMoreDataWhenScrolled,\n  ICrudGetAction,\n  ICrudGetAllAction,\n  ICrudPutAction,\n  ICrudDeleteAction\n} from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { ICategory, defaultValue } from 'app/shared/model/category.model';\n\nexport const ACTION_TYPES = {\n  FETCH_CATEGORY_LIST: 'category/FETCH_CATEGORY_LIST',\n  FETCH_CATEGORY: 'category/FETCH_CATEGORY',\n  CREATE_CATEGORY: 'category/CREATE_CATEGORY',\n  UPDATE_CATEGORY: 'category/UPDATE_CATEGORY',\n  DELETE_CATEGORY: 'category/DELETE_CATEGORY',\n  RESET: 'category/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<ICategory>,\n  entity: defaultValue,\n  links: { next: 0 },\n  updating: false,\n  totalItems: 0,\n  updateSuccess: false\n};\n\nexport type CategoryState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: CategoryState = initialState, action): CategoryState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_CATEGORY_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_CATEGORY):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_CATEGORY):\n    case REQUEST(ACTION_TYPES.UPDATE_CATEGORY):\n    case REQUEST(ACTION_TYPES.DELETE_CATEGORY):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_CATEGORY_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_CATEGORY):\n    case FAILURE(ACTION_TYPES.CREATE_CATEGORY):\n    case FAILURE(ACTION_TYPES.UPDATE_CATEGORY):\n    case FAILURE(ACTION_TYPES.DELETE_CATEGORY):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_CATEGORY_LIST):\n      const links = parseHeaderForLinks(action.payload.headers.link);\n\n      return {\n        ...state,\n        loading: false,\n        links,\n        entities: loadMoreDataWhenScrolled(state.entities, action.payload.data, links),\n        totalItems: parseInt(action.payload.headers['x-total-count'], 10)\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_CATEGORY):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_CATEGORY):\n    case SUCCESS(ACTION_TYPES.UPDATE_CATEGORY):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_CATEGORY):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/categories';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<ICategory> = (page, size, sort) => {\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\n  return {\n    type: ACTION_TYPES.FETCH_CATEGORY_LIST,\n    payload: axios.get<ICategory>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\n  };\n};\n\nexport const getEntity: ICrudGetAction<ICategory> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_CATEGORY,\n    payload: axios.get<ICategory>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<ICategory> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_CATEGORY,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<ICategory> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_CATEGORY,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<ICategory> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_CATEGORY,\n    payload: axios.delete(requestUrl)\n  });\n  return result;\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n"]}]}