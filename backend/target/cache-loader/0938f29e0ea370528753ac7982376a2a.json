{"remainingRequest":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js??ref--4-2!/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/product/product-detail.tsx","dependencies":[{"path":"/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/product/product-detail.tsx","mtime":1560712705215},{"path":"/home/guilherme/workspace/jhipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, openFile, byteSize } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getEntity } from './product.reducer';\nexport class ProductDetail extends React.Component {\n    componentDidMount() {\n        this.props.getEntity(this.props.match.params.id);\n    }\n    render() {\n        const { productEntity } = this.props;\n        return (React.createElement(Row, null,\n            React.createElement(Col, { md: \"8\" },\n                React.createElement(\"h2\", null,\n                    React.createElement(Translate, { contentKey: \"pluscapeApp.product.detail.title\" }, \"Product\"),\n                    \" [\",\n                    React.createElement(\"b\", null, productEntity.id),\n                    \"]\"),\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"name\" },\n                            React.createElement(Translate, { contentKey: \"pluscapeApp.product.name\" }, \"Name\"))),\n                    React.createElement(\"dd\", null, productEntity.name),\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"description\" },\n                            React.createElement(Translate, { contentKey: \"pluscapeApp.product.description\" }, \"Description\"))),\n                    React.createElement(\"dd\", null, productEntity.description),\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"currentPrice\" },\n                            React.createElement(Translate, { contentKey: \"pluscapeApp.product.currentPrice\" }, \"Current Price\"))),\n                    React.createElement(\"dd\", null, productEntity.currentPrice),\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"standardPrice\" },\n                            React.createElement(Translate, { contentKey: \"pluscapeApp.product.standardPrice\" }, \"Standard Price\"))),\n                    React.createElement(\"dd\", null, productEntity.standardPrice),\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"link\" },\n                            React.createElement(Translate, { contentKey: \"pluscapeApp.product.link\" }, \"Link\"))),\n                    React.createElement(\"dd\", null, productEntity.link),\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"picture\" },\n                            React.createElement(Translate, { contentKey: \"pluscapeApp.product.picture\" }, \"Picture\"))),\n                    React.createElement(\"dd\", null, productEntity.picture ? (React.createElement(\"div\", null,\n                        React.createElement(\"a\", { onClick: openFile(productEntity.pictureContentType, productEntity.picture) },\n                            React.createElement(\"img\", { src: `data:${productEntity.pictureContentType};base64,${productEntity.picture}`, style: { maxHeight: '30px' } })),\n                        React.createElement(\"span\", null,\n                            productEntity.pictureContentType,\n                            \", \",\n                            byteSize(productEntity.picture)))) : null),\n                    React.createElement(\"dt\", null,\n                        React.createElement(Translate, { contentKey: \"pluscapeApp.product.sizes\" }, \"Sizes\")),\n                    React.createElement(\"dd\", null, productEntity.sizes\n                        ? productEntity.sizes.map((val, i) => (React.createElement(\"span\", { key: val.id },\n                            React.createElement(\"a\", null, val.description),\n                            i === productEntity.sizes.length - 1 ? '' : ', ')))\n                        : null),\n                    React.createElement(\"dt\", null,\n                        React.createElement(Translate, { contentKey: \"pluscapeApp.product.categories\" }, \"Categories\")),\n                    React.createElement(\"dd\", null, productEntity.categories\n                        ? productEntity.categories.map((val, i) => (React.createElement(\"span\", { key: val.id },\n                            React.createElement(\"a\", null, val.name),\n                            i === productEntity.categories.length - 1 ? '' : ', ')))\n                        : null)),\n                React.createElement(Button, { tag: Link, to: \"/entity/product\", replace: true, color: \"info\" },\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\n                    ' ',\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                        React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\n                \"\\u00A0\",\n                React.createElement(Button, { tag: Link, to: `/entity/product/${productEntity.id}/edit`, replace: true, color: \"primary\" },\n                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\n                    ' ',\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))))));\n    }\n}\nconst mapStateToProps = ({ product }) => ({\n    productEntity: product.entity\n});\nconst mapDispatchToProps = { getEntity };\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);\n",{"version":3,"file":"/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/product/product-detail.tsx","sourceRoot":"","sources":["/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/product/product-detail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAction, openFile, byteSize } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity } from './product.reducer';\nimport { IProduct } from 'app/shared/model/product.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IProductDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class ProductDetail extends React.Component<IProductDetailProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  render() {\n    const { productEntity } = this.props;\n    return (\n      <Row>\n        <Col md=\"8\">\n          <h2>\n            <Translate contentKey=\"pluscapeApp.product.detail.title\">Product</Translate> [<b>{productEntity.id}</b>]\n          </h2>\n          <dl className=\"jh-entity-details\">\n            <dt>\n              <span id=\"name\">\n                <Translate contentKey=\"pluscapeApp.product.name\">Name</Translate>\n              </span>\n            </dt>\n            <dd>{productEntity.name}</dd>\n            <dt>\n              <span id=\"description\">\n                <Translate contentKey=\"pluscapeApp.product.description\">Description</Translate>\n              </span>\n            </dt>\n            <dd>{productEntity.description}</dd>\n            <dt>\n              <span id=\"currentPrice\">\n                <Translate contentKey=\"pluscapeApp.product.currentPrice\">Current Price</Translate>\n              </span>\n            </dt>\n            <dd>{productEntity.currentPrice}</dd>\n            <dt>\n              <span id=\"standardPrice\">\n                <Translate contentKey=\"pluscapeApp.product.standardPrice\">Standard Price</Translate>\n              </span>\n            </dt>\n            <dd>{productEntity.standardPrice}</dd>\n            <dt>\n              <span id=\"link\">\n                <Translate contentKey=\"pluscapeApp.product.link\">Link</Translate>\n              </span>\n            </dt>\n            <dd>{productEntity.link}</dd>\n            <dt>\n              <span id=\"picture\">\n                <Translate contentKey=\"pluscapeApp.product.picture\">Picture</Translate>\n              </span>\n            </dt>\n            <dd>\n              {productEntity.picture ? (\n                <div>\n                  <a onClick={openFile(productEntity.pictureContentType, productEntity.picture)}>\n                    <img src={`data:${productEntity.pictureContentType};base64,${productEntity.picture}`} style={{ maxHeight: '30px' }} />\n                  </a>\n                  <span>\n                    {productEntity.pictureContentType}, {byteSize(productEntity.picture)}\n                  </span>\n                </div>\n              ) : null}\n            </dd>\n            <dt>\n              <Translate contentKey=\"pluscapeApp.product.sizes\">Sizes</Translate>\n            </dt>\n            <dd>\n              {productEntity.sizes\n                ? productEntity.sizes.map((val, i) => (\n                    <span key={val.id}>\n                      <a>{val.description}</a>\n                      {i === productEntity.sizes.length - 1 ? '' : ', '}\n                    </span>\n                  ))\n                : null}\n            </dd>\n            <dt>\n              <Translate contentKey=\"pluscapeApp.product.categories\">Categories</Translate>\n            </dt>\n            <dd>\n              {productEntity.categories\n                ? productEntity.categories.map((val, i) => (\n                    <span key={val.id}>\n                      <a>{val.name}</a>\n                      {i === productEntity.categories.length - 1 ? '' : ', '}\n                    </span>\n                  ))\n                : null}\n            </dd>\n          </dl>\n          <Button tag={Link} to=\"/entity/product\" replace color=\"info\">\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\n            </span>\n          </Button>\n          &nbsp;\n          <Button tag={Link} to={`/entity/product/${productEntity.id}/edit`} replace color=\"primary\">\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n            </span>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ product }: IRootState) => ({\n  productEntity: product.entity\n});\n\nconst mapDispatchToProps = { getEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProductDetail);\n"]}]}