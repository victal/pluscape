{"remainingRequest":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js??ref--4-3!/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/size/size-delete-dialog.tsx","dependencies":[{"path":"/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/size/size-delete-dialog.tsx","mtime":1560712705215},{"path":"/home/guilherme/workspace/jhipster/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { Translate } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getEntity, deleteEntity } from './size.reducer';\nexport class SizeDeleteDialog extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.confirmDelete = event => {\n            this.props.deleteEntity(this.props.sizeEntity.id);\n            this.handleClose(event);\n        };\n        this.handleClose = event => {\n            event.stopPropagation();\n            this.props.history.goBack();\n        };\n    }\n    componentDidMount() {\n        this.props.getEntity(this.props.match.params.id);\n    }\n    render() {\n        const { sizeEntity } = this.props;\n        return (React.createElement(Modal, { isOpen: true, toggle: this.handleClose },\n            React.createElement(ModalHeader, { toggle: this.handleClose },\n                React.createElement(Translate, { contentKey: \"entity.delete.title\" }, \"Confirm delete operation\")),\n            React.createElement(ModalBody, { id: \"pluscapeApp.size.delete.question\" },\n                React.createElement(Translate, { contentKey: \"pluscapeApp.size.delete.question\", interpolate: { id: sizeEntity.id } }, \"Are you sure you want to delete this Size?\")),\n            React.createElement(ModalFooter, null,\n                React.createElement(Button, { color: \"secondary\", onClick: this.handleClose },\n                    React.createElement(FontAwesomeIcon, { icon: \"ban\" }),\n                    \"\\u00A0\",\n                    React.createElement(Translate, { contentKey: \"entity.action.cancel\" }, \"Cancel\")),\n                React.createElement(Button, { id: \"jhi-confirm-delete-size\", color: \"danger\", onClick: this.confirmDelete },\n                    React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\n                    \"\\u00A0\",\n                    React.createElement(Translate, { contentKey: \"entity.action.delete\" }, \"Delete\")))));\n    }\n}\nconst mapStateToProps = ({ size }) => ({\n    sizeEntity: size.entity\n});\nconst mapDispatchToProps = { getEntity, deleteEntity };\nexport default connect(mapStateToProps, mapDispatchToProps)(SizeDeleteDialog);\n",{"version":3,"file":"/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/size/size-delete-dialog.tsx","sourceRoot":"","sources":["/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/entities/size/size-delete-dialog.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAChF,OAAO,EAAE,SAAS,EAAqC,MAAM,gBAAgB,CAAC;AAC9E,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAIjE,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAIzD,MAAM,OAAO,gBAAiB,SAAQ,KAAK,CAAC,SAAiC;IAA7E;;QAKE,kBAAa,GAAG,KAAK,CAAC,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAClD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC;QAEF,gBAAW,GAAG,KAAK,CAAC,EAAE;YACpB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC9B,CAAC,CAAC;IA6BJ,CAAC;IAzCC,iBAAiB;QACf,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAYD,MAAM;QACJ,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAClC,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,QAAC,MAAM,EAAE,IAAI,CAAC,WAAW;YACpC,oBAAC,WAAW,IAAC,MAAM,EAAE,IAAI,CAAC,WAAW;gBACnC,oBAAC,SAAS,IAAC,UAAU,EAAC,qBAAqB,+BAAqC,CACpE;YACd,oBAAC,SAAS,IAAC,EAAE,EAAC,kCAAkC;gBAC9C,oBAAC,SAAS,IAAC,UAAU,EAAC,kCAAkC,EAAC,WAAW,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,iDAE/E,CACF;YACZ,oBAAC,WAAW;gBACV,oBAAC,MAAM,IAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW;oBACjD,oBAAC,eAAe,IAAC,IAAI,EAAC,KAAK,GAAG;;oBAE9B,oBAAC,SAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CACxD;gBACT,oBAAC,MAAM,IAAC,EAAE,EAAC,yBAAyB,EAAC,KAAK,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa;oBAC7E,oBAAC,eAAe,IAAC,IAAI,EAAC,OAAO,GAAG;;oBAEhC,oBAAC,SAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CACxD,CACG,CACR,CACT,CAAC;IACJ,CAAC;CACF;AAED,MAAM,eAAe,GAAG,CAAC,EAAE,IAAI,EAAc,EAAE,EAAE,CAAC,CAAC;IACjD,UAAU,EAAE,IAAI,CAAC,MAAM;CACxB,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC;AAKvD,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,gBAAgB,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { ISize } from 'app/shared/model/size.model';\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity, deleteEntity } from './size.reducer';\n\nexport interface ISizeDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class SizeDeleteDialog extends React.Component<ISizeDeleteDialogProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  confirmDelete = event => {\n    this.props.deleteEntity(this.props.sizeEntity.id);\n    this.handleClose(event);\n  };\n\n  handleClose = event => {\n    event.stopPropagation();\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { sizeEntity } = this.props;\n    return (\n      <Modal isOpen toggle={this.handleClose}>\n        <ModalHeader toggle={this.handleClose}>\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\n        </ModalHeader>\n        <ModalBody id=\"pluscapeApp.size.delete.question\">\n          <Translate contentKey=\"pluscapeApp.size.delete.question\" interpolate={{ id: sizeEntity.id }}>\n            Are you sure you want to delete this Size?\n          </Translate>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.handleClose}>\n            <FontAwesomeIcon icon=\"ban\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\n          </Button>\n          <Button id=\"jhi-confirm-delete-size\" color=\"danger\" onClick={this.confirmDelete}>\n            <FontAwesomeIcon icon=\"trash\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = ({ size }: IRootState) => ({\n  sizeEntity: size.entity\n});\n\nconst mapDispatchToProps = { getEntity, deleteEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SizeDeleteDialog);\n"]}]}