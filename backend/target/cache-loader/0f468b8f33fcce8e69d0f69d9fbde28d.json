{"remainingRequest":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js??ref--4-3!/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/administration/audits/audits.tsx","dependencies":[{"path":"/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/administration/audits/audits.tsx","mtime":1560712705215},{"path":"/home/guilherme/workspace/jhipster/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/guilherme/workspace/jhipster/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Row, Table } from 'reactstrap';\nimport { Translate, TextFormat, JhiPagination, JhiItemCount, getSortState } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { APP_TIMESTAMP_FORMAT } from 'app/config/constants';\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\nimport { getAudits } from '../administration.reducer';\nconst previousMonth = () => {\n    const now = new Date();\n    const fromDate = now.getMonth() === 0\n        ? new Date(now.getFullYear() - 1, 11, now.getDate())\n        : new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\n    return fromDate.toISOString().slice(0, 10);\n};\nconst today = () => {\n    // Today + 1 day - needed if the current day must be included\n    const day = new Date();\n    day.setDate(day.getDate() + 1);\n    const toDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\n    return toDate.toISOString().slice(0, 10);\n};\nexport class AuditsPage extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = Object.assign({}, getSortState(this.props.location, ITEMS_PER_PAGE), { fromDate: previousMonth(), toDate: today() });\n        this.onChangeFromDate = evt => {\n            this.setState({\n                fromDate: evt.target.value\n            }, () => this.getAudits());\n        };\n        this.onChangeToDate = evt => {\n            this.setState({\n                toDate: evt.target.value\n            }, () => this.getAudits());\n        };\n        this.sort = prop => () => {\n            this.setState({\n                order: this.state.order === 'asc' ? 'desc' : 'asc',\n                sort: prop\n            }, () => this.transition());\n        };\n        this.transition = () => {\n            this.getAudits();\n            this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\n        };\n        this.handlePagination = activePage => this.setState({ activePage }, () => this.transition());\n        this.getAudits = () => {\n            const { activePage, itemsPerPage, sort, order, fromDate, toDate } = this.state;\n            this.props.getAudits(activePage - 1, itemsPerPage, `${sort},${order}`, fromDate, toDate);\n        };\n    }\n    componentDidMount() {\n        this.getAudits();\n    }\n    render() {\n        const { audits, totalItems } = this.props;\n        const { fromDate, toDate } = this.state;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h2\", { id: \"audits-page-heading\" }, \"Audits\"),\n            React.createElement(\"span\", null,\n                React.createElement(Translate, { contentKey: \"audits.filter.from\" }, \"from\")),\n            React.createElement(Input, { type: \"date\", value: fromDate, onChange: this.onChangeFromDate, name: \"fromDate\", id: \"fromDate\" }),\n            React.createElement(\"span\", null,\n                React.createElement(Translate, { contentKey: \"audits.filter.to\" }, \"to\")),\n            React.createElement(Input, { type: \"date\", value: toDate, onChange: this.onChangeToDate, name: \"toDate\", id: \"toDate\" }),\n            audits && audits.length > 0 ? (React.createElement(Table, { striped: true, responsive: true },\n                React.createElement(\"thead\", null,\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"th\", { onClick: this.sort('auditEventDate') },\n                            React.createElement(Translate, { contentKey: \"audits.table.header.date\" }, \"Date\"),\n                            React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\n                        React.createElement(\"th\", { onClick: this.sort('principal') },\n                            React.createElement(Translate, { contentKey: \"audits.table.header.principal\" }, \"User\"),\n                            React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\n                        React.createElement(\"th\", { onClick: this.sort('auditEventType') },\n                            React.createElement(Translate, { contentKey: \"audits.table.header.status\" }, \"State\"),\n                            React.createElement(FontAwesomeIcon, { icon: \"sort\" })),\n                        React.createElement(\"th\", null,\n                            React.createElement(Translate, { contentKey: \"audits.table.header.data\" }, \"Extra data\")))),\n                React.createElement(\"tbody\", null, audits.map((audit, i) => (React.createElement(\"tr\", { key: `audit-${i}` },\n                    React.createElement(\"td\", null, React.createElement(TextFormat, { value: audit.timestamp, type: \"date\", format: APP_TIMESTAMP_FORMAT })),\n                    React.createElement(\"td\", null, audit.principal),\n                    React.createElement(\"td\", null, audit.type),\n                    React.createElement(\"td\", null,\n                        audit.data ? audit.data.message : null,\n                        audit.data ? audit.data.remoteAddress : null))))))) : (React.createElement(\"div\", { className: \"alert alert-warning\" },\n                React.createElement(Translate, { contentKey: \"audits.notFound\" }, \"No audit found\"))),\n            React.createElement(\"div\", { className: audits && audits.length > 0 ? '' : 'd-none' },\n                React.createElement(Row, { className: \"justify-content-center\" },\n                    React.createElement(JhiItemCount, { page: this.state.activePage, total: totalItems, itemsPerPage: this.state.itemsPerPage, i18nEnabled: true })),\n                React.createElement(Row, { className: \"justify-content-center\" },\n                    React.createElement(JhiPagination, { activePage: this.state.activePage, onSelect: this.handlePagination, maxButtons: 5, itemsPerPage: this.state.itemsPerPage, totalItems: this.props.totalItems })))));\n    }\n}\nconst mapStateToProps = (storeState) => ({\n    audits: storeState.administration.audits,\n    totalItems: storeState.administration.totalItems\n});\nconst mapDispatchToProps = { getAudits };\nexport default connect(mapStateToProps, mapDispatchToProps)(AuditsPage);\n",{"version":3,"file":"/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/administration/audits/audits.tsx","sourceRoot":"","sources":["/home/guilherme/workspace/jhipster/node_modules/tslint-loader/index.js!/home/guilherme/workspace/jhipster/src/main/webapp/app/modules/administration/audits/audits.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { Input, Row, Table } from 'reactstrap';\nimport { Translate, TextFormat, JhiPagination, JhiItemCount, getSortState, IPaginationBaseState } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { APP_TIMESTAMP_FORMAT } from 'app/config/constants';\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getAudits } from '../administration.reducer';\n\nexport interface IAuditsPageProps extends StateProps, DispatchProps, RouteComponentProps<{}> {}\n\nexport interface IAuditsPageState extends IPaginationBaseState {\n  fromDate: string;\n  toDate: string;\n}\n\nconst previousMonth = (): string => {\n  const now: Date = new Date();\n  const fromDate =\n    now.getMonth() === 0\n      ? new Date(now.getFullYear() - 1, 11, now.getDate())\n      : new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\n  return fromDate.toISOString().slice(0, 10);\n};\n\nconst today = (): string => {\n  // Today + 1 day - needed if the current day must be included\n  const day: Date = new Date();\n  day.setDate(day.getDate() + 1);\n  const toDate = new Date(day.getFullYear(), day.getMonth(), day.getDate());\n  return toDate.toISOString().slice(0, 10);\n};\n\nexport class AuditsPage extends React.Component<IAuditsPageProps, IAuditsPageState> {\n  state: IAuditsPageState = {\n    ...getSortState(this.props.location, ITEMS_PER_PAGE),\n    fromDate: previousMonth(),\n    toDate: today()\n  };\n\n  componentDidMount() {\n    this.getAudits();\n  }\n\n  onChangeFromDate = evt => {\n    this.setState(\n      {\n        fromDate: evt.target.value\n      },\n      () => this.getAudits()\n    );\n  };\n  onChangeToDate = evt => {\n    this.setState(\n      {\n        toDate: evt.target.value\n      },\n      () => this.getAudits()\n    );\n  };\n\n  sort = prop => () => {\n    this.setState(\n      {\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\n        sort: prop\n      },\n      () => this.transition()\n    );\n  };\n\n  transition = () => {\n    this.getAudits();\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\n  };\n\n  handlePagination = activePage => this.setState({ activePage }, () => this.transition());\n\n  getAudits = () => {\n    const { activePage, itemsPerPage, sort, order, fromDate, toDate } = this.state;\n    this.props.getAudits(activePage - 1, itemsPerPage, `${sort},${order}`, fromDate, toDate);\n  };\n\n  render() {\n    const { audits, totalItems } = this.props;\n    const { fromDate, toDate } = this.state;\n    return (\n      <div>\n        <h2 id=\"audits-page-heading\">Audits</h2>\n        <span>\n          <Translate contentKey=\"audits.filter.from\">from</Translate>\n        </span>\n        <Input type=\"date\" value={fromDate} onChange={this.onChangeFromDate} name=\"fromDate\" id=\"fromDate\" />\n        <span>\n          <Translate contentKey=\"audits.filter.to\">to</Translate>\n        </span>\n        <Input type=\"date\" value={toDate} onChange={this.onChangeToDate} name=\"toDate\" id=\"toDate\" />\n        {audits && audits.length > 0 ? (\n          <Table striped responsive>\n            <thead>\n              <tr>\n                <th onClick={this.sort('auditEventDate')}>\n                  <Translate contentKey=\"audits.table.header.date\">Date</Translate>\n                  <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th onClick={this.sort('principal')}>\n                  <Translate contentKey=\"audits.table.header.principal\">User</Translate>\n                  <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th onClick={this.sort('auditEventType')}>\n                  <Translate contentKey=\"audits.table.header.status\">State</Translate>\n                  <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th>\n                  <Translate contentKey=\"audits.table.header.data\">Extra data</Translate>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {audits.map((audit, i) => (\n                <tr key={`audit-${i}`}>\n                  <td>{<TextFormat value={audit.timestamp} type=\"date\" format={APP_TIMESTAMP_FORMAT} />}</td>\n                  <td>{audit.principal}</td>\n                  <td>{audit.type}</td>\n                  <td>\n                    {audit.data ? audit.data.message : null}\n                    {audit.data ? audit.data.remoteAddress : null}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        ) : (\n          <div className=\"alert alert-warning\">\n            <Translate contentKey=\"audits.notFound\">No audit found</Translate>\n          </div>\n        )}\n        <div className={audits && audits.length > 0 ? '' : 'd-none'}>\n          <Row className=\"justify-content-center\">\n            <JhiItemCount page={this.state.activePage} total={totalItems} itemsPerPage={this.state.itemsPerPage} i18nEnabled />\n          </Row>\n          <Row className=\"justify-content-center\">\n            <JhiPagination\n              activePage={this.state.activePage}\n              onSelect={this.handlePagination}\n              maxButtons={5}\n              itemsPerPage={this.state.itemsPerPage}\n              totalItems={this.props.totalItems}\n            />\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  audits: storeState.administration.audits,\n  totalItems: storeState.administration.totalItems\n});\n\nconst mapDispatchToProps = { getAudits };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuditsPage);\n"]}]}